name: auth service CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
    paths:
      - "backend/AuthService/**"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          # must specify password for PG Docker container image, see: https://registry.hub.docker.com/_/postgres?tab=description&page=1&name=10
          POSTGRES_USER: rijo
          POSTGRES_PASSWORD: password7
          POSTGRES_DB: productSyncAuthDB
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 14
        uses: actions/setup-node@v3
        with:
          cache-dependency-path: backend/AuthService/package-lock.json
          node-version: "20.x"
          cache: "npm"

      - run: npm install
        working-directory: backend/AuthService

      - name: Import DB seed data
        run: psql -d postgresql://rijo@localhost/productSyncAuthDB -f init.sql
        working-directory: backend/AuthService
        env:
          PGPASSWORD: password7

      # - name: Install Docker Compose
      #   run: |
      #     sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      #     sudo chmod +x /usr/local/bin/docker-compose
      #     docker-compose --version
      #   continue-on-error: false

      # - name: Start application-specific services using Docker Compose
      #   run: docker-compose up -d
      #   working-directory: backend/AuthService
      #   continue-on-error: false

      - run: npm test
        working-directory: backend/AuthService
